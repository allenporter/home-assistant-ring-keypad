---
blueprint:
  name: Update Ring Keypad from Alarm
  description: |
    Automations to follow state changes of an Alarm Control Panel entity and
    update the mode of the Ring Keypad.

    See https://github.com/allenporter/home-assistant-ring-keypad/
  domain: automation
  input:
    keypad_device:
      name: Ring Keypad Device
      description: |
        The Ring Keypad device that will be updated with state changes from the
        alarm control panel.
      selector:
        device:
          integration: zwave_js
          manufacturer: Ring
    alarm_entity:
      name: Alarm Control Panel entity
      description: The Alarm Control Panel to follow for state changes to push to the keypad.
      selector:
        entity:
          domain: alarm_control_panel
    arm_away_delay:
      name: Keypad Exit Delay
      description: |
          The Keypad will say "Exit delay started" and count down this amount of time.  This
          needs to match the actual amount of time the Alarm Control Panel is configured
          to delay.
      selector:
        number:
          min: 0
          max: 120
    trigger_delay:
      name: Keypad Entry Delay
      description: |
          The Keypad will say "Entry delay started" and count down this amount of time.  This
          needs to match the actual amount of time the Alarm Control Panel is configured
          to delay.
      selector:
        number:
          min: 0
          max: 120
mode: queued # Don't overload keypad, process updates serially
trace:
  stored_traces: 10
variables:
  arm_away_delay: !input arm_away_delay
  trigger_delay: !input trigger_delay
trigger:
  - alias: Alarm Control Panel State Listener
    platform: state
    entity_id: !input alarm_entity
action:
  - alias: Update Ring Keypad Alarm State
    service: "ring_keypad.update_alarm_state"
    data:
      alarm_state: "{{ trigger.to_state.state }}"
      delay: >-
        {% if trigger.to_state.state == "arm_away" %}
          {{ arm_away_delay }}
        {% elif trigger.to_state.state == "trigger" %}
          {{ trigger_delay }}
        {% else %}
          0
        {% endif %}
    target:
      device_id: !input keypad_device
